{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DataIngestionDF"
		},
		"dataimage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'dataimage'"
		},
		"demols_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'demols'"
		},
		"onprem_sql_ls_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'onprem_sql_ls'"
		},
		"output3plake_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'output3plake'"
		},
		"outputls_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'outputls'"
		},
		"Fbapils_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://graph.facebook.com/v16.0/me?fields=id%2Cname&access_token=EAAQ8xZAt7NQYBAIiihCgEtCU1L6LBqbOZAct5waAW3gjDcXvGvlSWRuuCsvizoFsooiKMnstyIcGdXTfiTHOIZCMZCDpzh8W4SQT3eUm7ZBIBN3t4YIxPkJNIvt2bC7FLs2mlra29LEzuiXucZC43GtdLtxSry1ZAgZAK7Ci6ozDzeggvbwpWejB2D52Plb19lYqZAxgroDvN5QZDZD"
		},
		"RestAPIls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://jsonplaceholder.typicode.com/users"
		},
		"output3plake_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://3plakesa.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/get_filename')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_tablename",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "output",
								"type": "DatasetReference",
								"parameters": {
									"filename": "*.csv"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-19T03:15:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/get_filename_with_filter')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_tablename",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "output",
								"type": "DatasetReference",
								"parameters": {
									"filename": "*.csv"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "FilterChildTable",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "get_tablename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_tablename').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name, 'child' )",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-20T13:37:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/get_filename_with_other_field_list')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_tablename",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "output",
								"type": "DatasetReference",
								"parameters": {
									"filename": "*.csv"
								}
							},
							"fieldList": [
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-19T03:15:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/get_tablename')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_tablename",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select *\nfrom INFORMATION_SCHEMA.TABLES\nwhere TABLE_TYPE = 'BASE TABLE'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "demodb",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "data3p"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"YYYYMM": {
						"type": "String"
					},
					"YYYYMM_": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-17T13:26:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/demodb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_api_to_csv_directly')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "api_data_extraction",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "RestAPI",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "output3plake",
								"type": "DatasetReference",
								"parameters": {
									"filename": "user1.csv",
									"foldername": "tocsv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-22T02:33:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestAPI')]",
				"[concat(variables('factoryId'), '/datasets/output3plake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_api_to_csv_undirectly')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "api_data_extraction",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "RestAPI",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "output3plake",
								"type": "DatasetReference",
								"parameters": {
									"filename": "user.json",
									"foldername": "tojson"
								}
							}
						]
					},
					{
						"name": "json_to_csv",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "api_data_extraction",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "id",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "username",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "username",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "email",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "email",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "phone",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "phone",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "website",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "website",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "output3plake",
								"type": "DatasetReference",
								"parameters": {
									"filename": "user.json",
									"foldername": "tojson"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "output3plake",
								"type": "DatasetReference",
								"parameters": {
									"filename": "user.csv",
									"foldername": "tocsv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-22T02:33:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RestAPI')]",
				"[concat(variables('factoryId'), '/datasets/output3plake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_apifacebook_to_csv_directly_')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "api_data_extraction",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "Fbapi",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "output3plake",
								"type": "DatasetReference",
								"parameters": {
									"filename": "user2.csv",
									"foldername": "tocsv"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-22T03:18:00Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Fbapi')]",
				"[concat(variables('factoryId'), '/datasets/output3plake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_clean_moviedata')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "fl_movies_clean",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "fl_movies_clean",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Movies": {
										"filename": "movies.csv",
										"foldername": "moviedata"
									},
									"MoviesClean": {
										"filename": "moviesclean.csv",
										"foldername": "moviedataclean"
									},
									"MoviesByYearSink": {
										"filename": "MoviesByYear.csv",
										"foldername": "moviedataclean"
									},
									"YearFilter1995Sink": {
										"filename": "MoviesFilter1995.csv",
										"foldername": "moviedataclean"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-20T05:18:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/fl_movies_clean')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_csv_to_sqlsv_standard')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "data3p",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "YYYYMM",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "YYYYMM",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FLM_UPI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FLM_UPI",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FLM_UPI_NAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FLM_UPI_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FLM_EMAIL",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FLM_EMAIL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SLM_UPI",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLM_UPI",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SLM_UPI_NAME",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLM_UPI_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SLM_EMAIL",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SLM_EMAIL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FLM_DOJ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "FLM_DOJ",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MONTH_OF_WORKING",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MONTH_OF_WORKING",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "STATUS_WORKING",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "STATUS_WORKING",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IS_TRACKING_3P",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "IS_TRACKING_3P",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RESULT_SKILL_SCORE",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "RESULT_SKILL_SCORE",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dataimage",
								"type": "DatasetReference",
								"parameters": {
									"filename": "data3p.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "demodb",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "data3p"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"YYYYMM": {
						"type": "String"
					},
					"YYYYMM_": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-17T08:28:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dataimage')]",
				"[concat(variables('factoryId'), '/datasets/demodb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_csv_to_sqlsv_with_variable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_YYYYMM",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "YYYYMM",
							"value": {
								"value": "@concat(formatDateTime(addToTime(utcnow(), -4, 'Month'),'yyyy'),formatDateTime(addToTime(utcnow(), -4, 'Month'),'MM'))\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "insert_data_by_YYYYMM",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "get_YYYYMM",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "delete from dbo.data3p where YYYYMM = @{variables('YYYYMM')}",
									"type": "Expression"
								},
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "dataimage",
								"type": "DatasetReference",
								"parameters": {
									"filename": "data3p.csv"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "demodb",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "data3p"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"YYYYMM": {
						"type": "String"
					},
					"YYYYMM_": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-17T08:28:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dataimage')]",
				"[concat(variables('factoryId'), '/datasets/demodb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_outputsourcedemosa_to_output3plakesa')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_tablename",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "output",
								"type": "DatasetReference",
								"parameters": {
									"filename": "*.csv"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "get_each_filename",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get_tablename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_tablename').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "copy_each_table",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "output",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "output3plake",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												},
												"foldername": "output"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-19T03:38:23Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/output')]",
				"[concat(variables('factoryId'), '/datasets/output3plake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_outputsourcedemosa_to_parquet3plakesa')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_tablename",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "output",
								"type": "DatasetReference",
								"parameters": {
									"filename": "*.csv"
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "get_each_filename",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get_tablename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_tablename').output.childItems",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "copy_each_table",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "output",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "output3plake",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@item().name",
													"type": "Expression"
												},
												"foldername": "toparquet"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-19T03:40:51Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/output')]",
				"[concat(variables('factoryId'), '/datasets/output3plake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sqlsv_to_csv_with_lookup_loop')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_tablename",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select *\nfrom INFORMATION_SCHEMA.TABLES\nwhere TABLE_TYPE = 'BASE TABLE'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "demodb",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "data3p"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "get_each_table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get_tablename",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_tablename').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Export_table",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "demodb",
											"type": "DatasetReference",
											"parameters": {
												"tablename": {
													"value": "@item().table_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "output",
											"type": "DatasetReference",
											"parameters": {
												"filename": {
													"value": "@concat(item().table_name,'.csv')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"YYYYMM": {
						"type": "String"
					},
					"YYYYMM_": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-18T08:34:40Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/demodb')]",
				"[concat(variables('factoryId'), '/datasets/output')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sqlsv_to_sqlsv_with_lookup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "data3p",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "get_max_YYYYMM",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from dbo.data3p where YYYYMM = @{activity('get_max_YYYYMM').output.firstRow.YYYYMM}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "delete from dbo.data3p_child where YYYYMM = @{activity('get_max_YYYYMM').output.firstRow.YYYYMM}",
									"type": "Expression"
								},
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "YYYYMM",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "YYYYMM",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FLM_UPI",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FLM_UPI",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FLM_UPI_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FLM_UPI_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FLM_EMAIL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FLM_EMAIL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SLM_UPI",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SLM_UPI",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SLM_UPI_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SLM_UPI_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SLM_EMAIL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SLM_EMAIL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FLM_DOJ",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FLM_DOJ",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MONTH_OF_WORKING",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "MONTH_OF_WORKING",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "STATUS_WORKING",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "STATUS_WORKING",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IS_TRACKING_3P",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "IS_TRACKING_3P",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RESULT_SKILL_SCORE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RESULT_SKILL_SCORE",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "demodb",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "data3p"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "demodb",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "data3p_child"
								}
							}
						]
					},
					{
						"name": "get_max_YYYYMM",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select max(YYYYMM) as YYYYMM from dbo.data3p",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "demodb",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "data3p"
								}
							},
							"firstRowOnly": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"YYYYMM": {
						"type": "String"
					},
					"YYYYMM_": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-17T10:54:32Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/demodb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sqlsv_to_sqlsv_with_same_variable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "data3p",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "get_YYYYMM",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from dbo.data3p where YYYYMM = @{variables('YYYYMM')}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "delete from dbo.data3p_child where YYYYMM = @{variables('YYYYMM')}",
									"type": "Expression"
								},
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "YYYYMM",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "YYYYMM",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FLM_UPI",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FLM_UPI",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FLM_UPI_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FLM_UPI_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FLM_EMAIL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FLM_EMAIL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SLM_UPI",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SLM_UPI",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SLM_UPI_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SLM_UPI_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SLM_EMAIL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SLM_EMAIL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FLM_DOJ",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FLM_DOJ",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MONTH_OF_WORKING",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "MONTH_OF_WORKING",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "STATUS_WORKING",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "STATUS_WORKING",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IS_TRACKING_3P",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "IS_TRACKING_3P",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RESULT_SKILL_SCORE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RESULT_SKILL_SCORE",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "demodb",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "data3p"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "demodb",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "data3p_child"
								}
							}
						]
					},
					{
						"name": "get_YYYYMM",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "YYYYMM",
							"value": {
								"value": "@concat(formatDateTime(addToTime(utcnow(), -4, 'Month'),'yyyy'),formatDateTime(addToTime(utcnow(), -4, 'Month'),'MM'))\n",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"YYYYMM": {
						"type": "String"
					},
					"YYYYMM_": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-17T08:46:39Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/demodb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_sqlsv_to_sqlsv_with_variable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "data3p",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "get_YYYYMM_",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select * from dbo.data3p where YYYYMM = @{variables('YYYYMM_')}",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "delete from dbo.data3p_child where YYYYMM = @{variables('YYYYMM_')}",
									"type": "Expression"
								},
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "YYYYMM",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "YYYYMM",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FLM_UPI",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FLM_UPI",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FLM_UPI_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FLM_UPI_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FLM_EMAIL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FLM_EMAIL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SLM_UPI",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SLM_UPI",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SLM_UPI_NAME",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SLM_UPI_NAME",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SLM_EMAIL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "SLM_EMAIL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "FLM_DOJ",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "FLM_DOJ",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MONTH_OF_WORKING",
											"type": "Double",
											"physicalType": "float"
										},
										"sink": {
											"name": "MONTH_OF_WORKING",
											"type": "Double",
											"physicalType": "float"
										}
									},
									{
										"source": {
											"name": "STATUS_WORKING",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "STATUS_WORKING",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IS_TRACKING_3P",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "IS_TRACKING_3P",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RESULT_SKILL_SCORE",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RESULT_SKILL_SCORE",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "demodb",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "data3p"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "demodb",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "data3p_child"
								}
							}
						]
					},
					{
						"name": "get_YYYYMM_",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "YYYYMM_",
							"value": {
								"value": "@concat(formatDateTime(addToTime(utcnow(), -4, 'Month'),'yyyy'),formatDateTime(addToTime(utcnow(), -4, 'Month'),'MM'))\n",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"YYYYMM": {
						"type": "String"
					},
					"YYYYMM_": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-17T08:38:14Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/demodb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_web')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://dummy.restapiexample.com/api/v1/employees",
							"method": "GET",
							"headers": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-21T11:09:29Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/set_lookup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_max_YYYYMM",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select max(YYYYMM) from dbo.data3p",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "demodb",
								"type": "DatasetReference",
								"parameters": {
									"tablename": "data3p"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"YYYYMM": {
						"type": "String"
					},
					"YYYYMM_": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-17T08:43:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/demodb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/set_variable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_YYYYMM",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"variableName": "YYYYMM",
							"value": {
								"value": "@formatDateTime(addDays(utcnow(),-1),'yyyyMM')\n",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"variables": {
					"YYYYMM": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-03-15T13:58:45Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Fbapi')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Fbapils",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Fbapils')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestAPI')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RestAPIls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RestAPIls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataimage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "dataimage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"container": "dataimage"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "YYYYMM",
						"type": "String"
					},
					{
						"name": "FLM_UPI",
						"type": "String"
					},
					{
						"name": "FLM_UPI_NAME",
						"type": "String"
					},
					{
						"name": "FLM_EMAIL",
						"type": "String"
					},
					{
						"name": "SLM_UPI",
						"type": "String"
					},
					{
						"name": "SLM_UPI_NAME",
						"type": "String"
					},
					{
						"name": "SLM_EMAIL",
						"type": "String"
					},
					{
						"name": "FLM_DOJ",
						"type": "String"
					},
					{
						"name": "MONTH_OF_WORKING",
						"type": "String"
					},
					{
						"name": "STATUS_WORKING",
						"type": "String"
					},
					{
						"name": "IS_TRACKING_3P",
						"type": "String"
					},
					{
						"name": "RESULT_SKILL_SCORE",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/dataimage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/demodb')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "demols",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "YYYYMM",
						"type": "varchar"
					},
					{
						"name": "FLM_UPI",
						"type": "varchar"
					},
					{
						"name": "FLM_UPI_NAME",
						"type": "varchar"
					},
					{
						"name": "FLM_EMAIL",
						"type": "varchar"
					},
					{
						"name": "SLM_UPI",
						"type": "varchar"
					},
					{
						"name": "SLM_UPI_NAME",
						"type": "varchar"
					},
					{
						"name": "SLM_EMAIL",
						"type": "varchar"
					},
					{
						"name": "FLM_DOJ",
						"type": "varchar"
					},
					{
						"name": "MONTH_OF_WORKING",
						"type": "float",
						"precision": 15
					},
					{
						"name": "STATUS_WORKING",
						"type": "varchar"
					},
					{
						"name": "IS_TRACKING_3P",
						"type": "varchar"
					},
					{
						"name": "RESULT_SKILL_SCORE",
						"type": "float",
						"precision": 15
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": {
						"value": "@dataset().tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/demols')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/onprem_sql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "onprem_sql_ls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/onprem_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/output')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "outputls",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"container": "output"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/outputls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/output3plake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "output3plake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"filename": {
						"type": "string"
					},
					"foldername": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().filename",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().foldername",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/output3plake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Fbapils')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Fbapils_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RestAPIls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('RestAPIls_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataimage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('dataimage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/demols')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('demols_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/onprem_sql_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('onprem_sql_ls_connectionString')]"
				},
				"connectVia": {
					"referenceName": "onprem",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/onprem')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/output3plake')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('output3plake_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('output3plake_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/outputls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('outputls_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/onprem')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/fl_movies_clean')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "output3plake",
								"type": "DatasetReference"
							},
							"name": "Movies"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "output3plake",
								"type": "DatasetReference"
							},
							"name": "MoviesClean"
						},
						{
							"dataset": {
								"referenceName": "output3plake",
								"type": "DatasetReference"
							},
							"name": "MoviesByYearSink"
						},
						{
							"dataset": {
								"referenceName": "output3plake",
								"type": "DatasetReference"
							},
							"name": "YearFilter1995Sink"
						}
					],
					"transformations": [
						{
							"name": "YearExtraction"
						},
						{
							"name": "MoviesByYear"
						},
						{
							"name": "YearFilter1995"
						}
					],
					"scriptLines": [
						"source(output(",
						"          movieId as short,",
						"          title as string,",
						"          genres as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> Movies",
						"Movies derive(Year = toInteger(trim(right(title, 6), '()')),",
						"          title = toString(left(title, length(title)-6))) ~> YearExtraction",
						"YearExtraction aggregate(groupBy(Year),",
						"     Moviescount = count(movieId),",
						"     partitionBy('hash', 1)) ~> MoviesByYear",
						"YearExtraction filter(Year == 1995) ~> YearFilter1995",
						"YearExtraction sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> MoviesClean",
						"MoviesByYear sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['MoviesByYear.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> MoviesByYearSink",
						"YearFilter1995 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['YearFilter1995.csv'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> YearFilter1995Sink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/output3plake')]"
			]
		}
	]
}