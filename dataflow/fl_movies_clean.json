{
	"name": "fl_movies_clean",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "output3plake",
						"type": "DatasetReference"
					},
					"name": "Movies"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "output3plake",
						"type": "DatasetReference"
					},
					"name": "MoviesClean"
				},
				{
					"dataset": {
						"referenceName": "output3plake",
						"type": "DatasetReference"
					},
					"name": "MoviesByYearSink"
				},
				{
					"dataset": {
						"referenceName": "output3plake",
						"type": "DatasetReference"
					},
					"name": "YearFilter1995Sink"
				}
			],
			"transformations": [
				{
					"name": "YearExtraction"
				},
				{
					"name": "MoviesByYear"
				},
				{
					"name": "YearFilter1995"
				}
			],
			"scriptLines": [
				"source(output(",
				"          movieId as short,",
				"          title as string,",
				"          genres as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Movies",
				"Movies derive(Year = toInteger(trim(right(title, 6), '()')),",
				"          title = toString(left(title, length(title)-6))) ~> YearExtraction",
				"YearExtraction aggregate(groupBy(Year),",
				"     Moviescount = count(movieId),",
				"     partitionBy('hash', 1)) ~> MoviesByYear",
				"YearExtraction filter(Year == 1995) ~> YearFilter1995",
				"YearExtraction sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> MoviesClean",
				"MoviesByYear sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['MoviesByYear.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> MoviesByYearSink",
				"YearFilter1995 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['YearFilter1995.csv'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> YearFilter1995Sink"
			]
		}
	}
}